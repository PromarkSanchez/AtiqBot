pip-compile
pip-sync
0 pip install -r requirements.txt
# 1. Activa el entorno virtual (ejemplo para CMD)
.venv\Scripts\activate
 limpiar cache for /d /r . %d in (__pycache__) do @if exist "%d" rd /s /q "%d".
# 2. Inicia Uvicorn
uvicorn app.main:app --reload
uvicorn app.main:app --host 0.0.0.0 --port 8000
uvicorn app.main:app --host 127.0.0.1 --port 8000
 
# 3. Ingesta
python ingest_document3.py
 
# opcional iniciar la base  nuevamente.
python init_db.py

4 importar apis al front
npx orval --config orval.config.cjs

5 iniciar redis
sudo service redis-server start

sudo service redis-server status
redis-cli ping

    limpiar cache
    redis-cli
        FLUSHALL

C:\Users\perse>ollama list
NAME                    ID              SIZE      MODIFIED
mixtral:latest          a3b6bef0f836    26 GB     15 seconds ago
llama3-chatqa:latest    b37a98d204b2    4.7 GB    11 minutes ago

C:\Users\perse>

--reingesta
si no hay extension crearla CREATE EXTENSION vector

PASOS DE RE- INGESTA 
TRUNCATE TABLE public.langchain_pg_collection, public.langchain_pg_embedding RESTART IDENTITY CASCADE;

ALTER TABLE public.langchain_pg_embedding 
ALTER COLUMN embedding TYPE vector(384);

CREATE INDEX ON public.langchain_pg_embedding 
USING HNSW (embedding vector_cosine_ops);

CREATE INDEX ON public.langchain_pg_embedding
USING GIN (cmetadata);


python ingest_document3.py


SELECT 
    cmetadata ->> 'context_name' as contexto,
    cmetadata ->> 'source_filename' as archivo,
    count(*) as numero_de_chunks
FROM 
    public.langchain_pg_embedding
GROUP BY 
    contexto, archivo
ORDER BY 
    contexto, archivo;